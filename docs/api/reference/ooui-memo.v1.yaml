openapi: 3.0.0
info:
  title: OOUI-memo
  version: '1.0'
  description: OOUIワークアウト - メモアプリケーション API仕様書
  contact: {}
servers:
  - url: 'http://localhost:3101'
    description: ''
paths:
  /api/memos:
    get:
      summary: GET Memos
      tags:
        - Memos
      responses:
        '200':
          $ref: '#/components/responses/Memos'
        '401':
          $ref: '#/components/responses/UnAuthorizedError'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: get-memos
      parameters:
        - $ref: '#/components/parameters/XSRF-TOKEN'
        - $ref: '#/components/parameters/searchWord'
        - $ref: '#/components/parameters/page'
      description: |
        （ログインユーザの）メモ一覧取得API（1ページつき30件）
    post:
      summary: POST Memo
      operationId: post-memos
      responses:
        '201':
          $ref: '#/components/responses/Memo'
        '401':
          $ref: '#/components/responses/UnAuthorizedError'
        '419':
          $ref: '#/components/responses/UnknownStatusError'
        '422':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/ServerError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Memo'
            examples: {}
      description: メモ作成API
      tags:
        - Memos
      parameters:
        - $ref: '#/components/parameters/XSRF-TOKEN'
  '/api/memos/{memo_id}':
    parameters:
      - $ref: '#/components/parameters/memo_id'
    get:
      summary: GET Memo
      tags:
        - Memos
      responses:
        '200':
          $ref: '#/components/responses/Memo'
        '401':
          $ref: '#/components/responses/UnAuthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: get-memo
      description: （ログインユーザの）メモ詳細取得API
      parameters:
        - $ref: '#/components/parameters/XSRF-TOKEN'
    delete:
      summary: DELETE Memo
      operationId: delete-memo
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/UnAuthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '419':
          $ref: '#/components/responses/UnknownStatusError'
        '500':
          $ref: '#/components/responses/ServerError'
      description: メモ削除API
      tags:
        - Memos
      parameters:
        - $ref: '#/components/parameters/XSRF-TOKEN'
    patch:
      summary: PATCH Memo
      operationId: patch-memo
      responses:
        '200':
          $ref: '#/components/responses/Memo'
        '401':
          $ref: '#/components/responses/UnAuthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '419':
          $ref: '#/components/responses/UnknownStatusError'
        '422':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/ServerError'
      description: メモ更新API
      parameters:
        - $ref: '#/components/parameters/XSRF-TOKEN'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Memo'
      tags:
        - Memos
  /api/login:
    post:
      summary: Login
      operationId: login
      responses:
        '200':
          $ref: '#/components/responses/User'
        '419':
          $ref: '#/components/responses/UnknownStatusError'
        '422':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/ServerError'
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
            examples:
              example-1:
                value:
                  email: dummy@email.com
                  password: test3101
      description: ログインAPI
      parameters:
        - $ref: '#/components/parameters/XSRF-TOKEN'
  /api/logout:
    post:
      summary: Logout
      operationId: logout
      responses:
        '204':
          description: No Content
        '419':
          $ref: '#/components/responses/UnknownStatusError'
        '500':
          $ref: '#/components/responses/ServerError'
      tags:
        - Auth
      description: ログアウトAPI
      parameters:
        - $ref: '#/components/parameters/XSRF-TOKEN'
  /api/user/me:
    get:
      summary: GET User
      tags:
        - Users
      responses:
        '200':
          $ref: '#/components/responses/User'
        '401':
          $ref: '#/components/responses/UnAuthorizedError'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: get-user
      description: ログインユーザ取得API
      parameters:
        - $ref: '#/components/parameters/XSRF-TOKEN'
    delete:
      summary: DELETE User
      operationId: delete-user
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/UnAuthorizedError'
        '500':
          $ref: '#/components/responses/ServerError'
      description: ログインユーザ削除API（ユーザに紐づく子データも削除）
      parameters:
        - $ref: '#/components/parameters/XSRF-TOKEN'
      tags:
        - Users
  /api/register:
    post:
      summary: POST User
      operationId: user-register
      responses:
        '201':
          $ref: '#/components/responses/User'
        '419':
          $ref: '#/components/responses/UnknownStatusError'
        '422':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/ServerError'
      description: ユーザ新規登録API
      parameters:
        - $ref: '#/components/parameters/XSRF-TOKEN'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      tags:
        - Auth
        - Users
  '/api/login/{provider}':
    parameters:
      - $ref: '#/components/parameters/provider'
    get:
      summary: GET OAuth URL
      tags:
        - Auth
        - Users
      responses:
        '200':
          $ref: '#/components/responses/OAuthRedirect'
        '419':
          $ref: '#/components/responses/UnknownStatusError'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: get-social-login
      description: OAuth認証URL取得API
      parameters:
        - $ref: '#/components/parameters/XSRF-TOKEN'
components:
  schemas:
    Memo:
      $ref: ./models/memo.v1.json
    Error:
      $ref: ./models/error.v1.json
    User:
      $ref: ./models/user.v1.json
    UserLogin:
      $ref: ./models/user-login.v1.json
  responses:
    Memos:
      description: メモ一覧情報レスポンス
      content:
        application/json:
          schema:
            description: メモ情報の配列（※title、content は先頭30文字分のみ取得）
            type: object
            properties:
              total:
                type: number
                description: 総件数
              per_page:
                type: number
                description: 1ページあたりの件数
              current_page:
                type: number
                description: 現在のページ数
              last_page:
                type: number
                description: 最後のページ数
              first_page_url:
                type: string
                description: 最初のページURL
              last_page_url:
                type: string
                description: 最後のページURL
              next_page_url:
                type: string
                nullable: true
                description: 次のページURL
              prev_page_url:
                type: string
                nullable: true
                description: 前のページURL
              path:
                type: string
                description: 元のリクエストURL
              from:
                type: number
                description: 何件数目からか
              to:
                type: number
                description: 何件数までか
              data:
                type: array
                items:
                  $ref: '#/components/schemas/Memo'
            required:
              - total
              - per_page
              - current_page
              - last_page
              - first_page_url
              - last_page_url
              - next_page_url
              - prev_page_url
              - path
              - from
              - to
              - data
          examples: {}
    Memo:
      description: メモ詳細情報レスポンス
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Memo'
    User:
      description: ユーザ情報レスポンス
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/User'
    ValidationError:
      description: |-
        UNPROCESSABLE_ENTITY：422
        バリデーションエラー
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            422(ログインAPI):
              value:
                message: The given data was invalid.
                errors:
                  email: ログインできません。入力した情報に誤りがないかご確認ください。
            422(メモ新規作成・更新API):
              value:
                message: The given data was invalid.
                errors:
                  title:
                    - メモタイトルの最大文字数100を超えています。
                  content:
                    - メモ内容の最大文字数65535を超えています。
    ServerError:
      description: |-
        INTERNAL_SERVER_ERROR：500
        サーバエラー
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            '500':
              value:
                message: Server Error
    UnAuthorizedError:
      description: |-
        UNAUTHORIZED：401
        認証エラー
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            '401':
              value:
                message: Unauthenticated.
    NotFoundError:
      description: |-
        NOT_FOUND：404
        リソースが見つからないエラー（ログインユーザ以外のユーザのリソースアクセスもこれに該当）
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    UnknownStatusError:
      description: |-
        UNKNOWN_STATUS：419
        CSRFトークン不一致など
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            419（CSRFトークン不一致）:
              value:
                message: CSRF token mismatch.
    OAuthRedirect:
      description: OAuth認証リクエスト情報レスポンス
      content:
        application/json:
          schema:
            type: object
            properties:
              redirect_url:
                type: string
                description: OAuth認証画面URL
                format: uri
            required:
              - redirect_url
  parameters:
    memo_id:
      name: memo_id
      in: path
      required: true
      schema:
        type: string
        format: uuid
      description: メモID
    XSRF-TOKEN:
      name: XSRF-TOKEN
      in: cookie
      required: true
      schema:
        type: string
      description: CSRF対策
    page:
      name: page
      in: query
      required: false
      schema:
        type: number
      description: ページ数
    searchWord:
      name: searchWord
      in: query
      required: false
      schema:
        type: string
      description: 検索文字
    provider:
      name: provider
      in: path
      required: true
      schema:
        type: string
        enum:
          - github
      description: 認証プロバイダー
  securitySchemes: {}
tags:
  - name: Memos
  - name: Users
  - name: Auth
